# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: build

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: digger-config-generator
  PLATFORMS: |
    linux/amd64

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v4
        if: github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/')
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        uses: actions/create-release@v1
        if: ${{ (github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/')) && steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Setup qemu
        uses: docker/setup-qemu-action@v2

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: release
